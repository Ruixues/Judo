cmake_minimum_required(VERSION 3.1)

# 项目信息

SET(CMAKE_C_COMPILER clang)
SET(CMAKE_CXX_COMPILER clang++)
project(Judo)
set(CMAKE_VERBOSE_MAKEFILE on)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
find_package(LLVM REQUIRED CONFIG)

message(STATUS "include path: ${LLVM_INCLUDE_DIRS}")
include_directories(${LLVM_INCLUDE_DIRS})
add_definitions(${LLVM_DEFINITIONS})
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native orcjit`")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
# 指定生成目标
aux_source_directory(. files)
llvm_map_components_to_libnames(llvm_libs support core irreader mcjit native orcjit)
add_executable(main ${files} opHandler.h llvmInclude.h loger.h parser/parser.h parser/Paren.h other/objectPool.h other/defer.h thirdparty/argparse/argparse.hpp args.h config.h parser/function.cpp reader.cpp ast/binaryOpt.h ast/variableDefine.h ast/FunctionCall.h parser/const/int32.h parser/paren.cpp parser/const/int32.cpp core.cpp parser/codeBlock.h parser/codeBlock.cpp parser/variableDefine.h parser/variableDefine.cpp parser/const/number.h parser/const/number.cpp parser/if.h parser/if.cpp ast/if.h opHandler.cpp)
target_link_libraries(main ${llvm_libs})